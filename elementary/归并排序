package isoft.sort.nuke_arithmetic;

public class MergeSort {
	
	public static void mergeSort(int[] arr){
		if(arr == null||arr.length<2){
			return;
		}
		mergeProcess(arr,0,arr.length-1);
	}

	private static void mergeProcess(int[] arr, int left, int right) {
		if(left == right){
			return;
		}
		int mid = left + ((right - left) >> 1);
		mergeProcess(arr,left,mid);
		mergeProcess(arr,mid+1,right);
		merge(arr,left,mid,right);
		
	}

	private static void merge(int[] arr, int left, int mid ,int right) {
		int help[] = new int[right - left + 1];
		int i = 0;
		int p1 = left;
		int p2 = mid + 1;
		while(p1<=mid&&p2<=right){
			help[i++] = arr[p1] < arr[p2] ? arr[p1++] : arr[p2++];
		}
		while(p1<=mid){
			help[i++] = arr[p1++]; 
		}
		while(p2<=right){
			help[i++] = arr[p2++];
		}
		for(i = 0;i<help.length ; i++){
			arr[left + i] = help[i];
		}
	}

	public static void main(String[] args) {
		int[] array = new int[10];

		for (int i = 0; i < 10; i++) {
			array[i] = (int) (Math.random() * 100);
		}

		System.out.println("排序前：");

		for (int element : array) {
			System.out.print(element + " ");
		}
		System.out.println("");
		System.out.println("排序后：");

		mergeSort(array);

		for (int element : array) {
			System.out.print(element + " ");
		}
	}

}
